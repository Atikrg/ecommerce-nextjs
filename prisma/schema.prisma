generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model SuperAdmin {
  id                        Int    @id  @default(autoincrement())
  email                     String
  password                  String
  is_google_register        Boolean @default(false)
}

model User {
  id                        Int      @id @default(autoincrement())
  firstName                 String?   // optional
  lastName                  String?   // optional
  is_admin                  Boolean  @default(false)
  email                     String   @unique
  password                  String
  rememberMe                Boolean  @default(false)
  is_google_register        Boolean  @default(false)
  agreed_terms_and_conditions Boolean @default(false)
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt

  
  contactMessages UserContactMessages[]
  transactions                Transactions[]
}


model Products {
  id           Int      @id @default(autoincrement())
  product_name String
  category     String
  price        Decimal  @db.Decimal(10, 2)
  brand        String   @db.VarChar(100)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
}

model UserContactMessages {
  id            Int      @id @default(autoincrement())
  userId        Int
  fullName      String
  emailAddress  String
  subject       String
  message       String

  user          User     @relation(fields: [userId], references: [id])

}


model CouponCodes {
  id             Int      @id @default(autoincrement())
  name           String   @unique
  discount_value Int
  discount_type  String   // "percent" or "fixed"
  createdAt      DateTime @default(now())
  expiresAt      DateTime?
}



enum PaymentType {
  RAZORPAY
  CARD
  CASH
  UPI
}



model Transactions {
  id           Int                  @id @default(autoincrement())
  user_id      Int
  currency     String
  amount       Decimal              @db.Decimal(10,2)
  payment_type PaymentType
  orderIds     TransactionsOrder[]
  total_amount Decimal              @db.Decimal(10,2)
  createdAt    DateTime             @default(now())

  user         User                 @relation(fields: [user_id], references: [id])
}
model TransactionsOrder {
  id             Int           @id @default(autoincrement())
  transactionId  Int
  orderIds       String[]      // change from Int[] to String[]
  createdAt      DateTime      @default(now())
  transaction    Transactions  @relation(fields: [transactionId], references: [id])
}